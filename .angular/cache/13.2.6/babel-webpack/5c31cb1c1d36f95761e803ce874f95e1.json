{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport { WebRequestService } from './web-request.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./web-request.service\";\nimport * as i3 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(_http, webService, router) {\n      this._http = _http;\n      this.webService = webService;\n      this.router = router;\n    }\n\n    login(email, password) {\n      return this.webService.login(email, password).pipe(shareReplay(), tap(res => {\n        // auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"LOGGED IN!\");\n      }));\n    } // SIGNUP\n\n\n    signup(email, password) {\n      return this.webService.signup(email, password).pipe(shareReplay(), tap(res => {\n        // auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"SuccessFully SignIn and Logged In!\");\n      }));\n    }\n\n    logout() {\n      this.removeSession();\n      this.router.navigate(['/login']);\n    }\n\n    getAccessToken() {\n      return sessionStorage.getItem('x-access-token');\n    }\n\n    getRefreshToken() {\n      return sessionStorage.getItem('x-refresh-token');\n    }\n\n    getUserId() {\n      return sessionStorage.getItem('user-id');\n    }\n\n    setAccessToken(accessToken) {\n      sessionStorage.setItem('x-access-token', accessToken);\n    }\n\n    setSession(userId, accessToken, refreshToken) {\n      sessionStorage.setItem('user-id', userId);\n      sessionStorage.setItem('x-access-token', accessToken);\n      sessionStorage.setItem('x-refresh-token', refreshToken);\n    }\n\n    removeSession() {\n      sessionStorage.removeItem('user-id');\n      sessionStorage.removeItem('x-access-token');\n      sessionStorage.removeItem('x-refresh-token');\n    } // GET NEW ACCESS TOKEN\n\n\n    getNewAccessToken() {\n      return this._http.get(`${this.webService.ROOT_URL}/users/me/access-token`, {\n        headers: {\n          'x-refresh-token': this.getRefreshToken(),\n          '_id': this.getUserId()\n        },\n        observe: 'response'\n      }).pipe(tap(res => {\n        this.setAccessToken(res.headers.get('x-access-token') || \"{}\");\n      }));\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.WebRequestService), i0.ɵɵinject(i3.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}